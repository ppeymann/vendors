// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/add": {
            "post": {
                "security": [
                    {
                        "session": []
                    }
                ],
                "description": "Add new production with specific User",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Add New Product",
                "parameters": [
                    {
                        "description": "Product Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "always returns status 200 but body contains error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vendora.BaseResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/models.ProductEntity"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user": {
            "get": {
                "description": "get user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "user info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vendora.BaseResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/models.UserEntity"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/EditUser": {
            "patch": {
                "description": "edit user with specific ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "edit user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vendora.BaseResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/models.UserEntity"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/login": {
            "post": {
                "description": "log in with specific user name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "log in",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vendora.BaseResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/models.TokenBundlerOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/signup": {
            "post": {
                "description": "Create New user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create New user",
                "parameters": [
                    {
                        "description": "AuthInput",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AuthInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vendora.BaseResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/models.TokenBundlerOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/{role}": {
            "get": {
                "security": [
                    {
                        "session": []
                    }
                ],
                "description": "get all user for admin",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "get all user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vendora.BaseResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.UserEntity"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/edit/{id}": {
            "patch": {
                "security": [
                    {
                        "session": []
                    }
                ],
                "description": "edit a product with specific ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "edit a product",
                "parameters": [
                    {
                        "description": "product input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "always return status 200 but body contains error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vendora.BaseResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/models.ProductEntity"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/mio/download/{token}": {
            "get": {
                "security": [
                    {
                        "Authenticate Header": []
                    }
                ],
                "description": "upload specified file to mio service with specified properties",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "mio"
                ],
                "summary": "uploading file to mio service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "access token of file",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "always returns status 200 but body contains errors",
                        "schema": {
                            "$ref": "#/definitions/vendora.BaseResult"
                        }
                    }
                }
            }
        },
        "/mio/image/{size}/{token}": {
            "get": {
                "security": [
                    {
                        "Authenticate Header": []
                    }
                ],
                "description": "upload specified file to mio service with specified properties",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "mio"
                ],
                "summary": "uploading file to mio service",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "width of requested image",
                        "name": "size",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "access token of file",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "always returns status 200 but body contains errors",
                        "schema": {
                            "$ref": "#/definitions/vendora.BaseResult"
                        }
                    }
                }
            }
        },
        "/mio/upload/{tag}": {
            "post": {
                "security": [
                    {
                        "Authenticate Header": []
                    },
                    {
                        "Session": []
                    }
                ],
                "description": "uploading specified file to mio service with specified properties",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mio"
                ],
                "summary": "uploading file to mio service",
                "parameters": [
                    {
                        "type": "file",
                        "description": "uploading file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "public",
                            "private",
                            "chat",
                            "profile"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "tag",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "authentication paseto token [Required If AuthMode: paseto]",
                        "name": "Authenticate",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "always returns status 200 but body contains errors",
                        "schema": {
                            "$ref": "#/definitions/vendora.BaseResult"
                        }
                    }
                }
            }
        },
        "/tags": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "get products with same tags",
                "parameters": [
                    {
                        "description": "slice of tags",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TagsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "always return status 200 but body contains error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vendora.BaseResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ProductEntity"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "GetProduct with specific ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "always returns status 200 but body contains error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vendora.BaseResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/models.ProductEntity"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.ActiveStatus": {
            "type": "string",
            "enum": [
                "DR",
                "SUS",
                "AC"
            ],
            "x-enum-varnames": [
                "Draft",
                "Suspend",
                "Activate"
            ]
        },
        "models.AuthInput": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "models.ProductEntity": {
            "type": "object",
            "properties": {
                "active": {
                    "description": "Active is change from Admin",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.ActiveStatus"
                        }
                    ]
                },
                "category_id": {
                    "description": "CategoryID",
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "desc": {
                    "description": "Description",
                    "type": "string"
                },
                "discount_price": {
                    "description": "DiscountPrice",
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "description": "Images",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "price": {
                    "description": "Price is total price",
                    "type": "number"
                },
                "rating": {
                    "description": "Rating",
                    "type": "integer"
                },
                "short_desc": {
                    "description": "ShortDescription",
                    "type": "string"
                },
                "sku": {
                    "description": "SKU is Stock keeping unit",
                    "type": "string"
                },
                "slug": {
                    "description": "Slug",
                    "type": "string"
                },
                "stock": {
                    "description": "Stock",
                    "type": "integer"
                },
                "tags": {
                    "description": "Tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "description": "Title",
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user_id": {
                    "description": "UserID",
                    "type": "integer"
                }
            }
        },
        "models.ProductInput": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "discount_price": {
                    "type": "number"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "price": {
                    "type": "number"
                },
                "short_desc": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.TagsInput": {
            "type": "object",
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.TokenBundlerOutput": {
            "type": "object",
            "properties": {
                "expire": {
                    "description": "Expire is time for expire token",
                    "type": "string"
                },
                "refresh": {
                    "description": "Refresh is string that for refresh old token",
                    "type": "string"
                },
                "token": {
                    "description": "Token is string that hashed by paseto",
                    "type": "string"
                }
            }
        },
        "models.UserEntity": {
            "type": "object",
            "properties": {
                "balance": {
                    "description": "Balance",
                    "type": "number"
                },
                "first_name": {
                    "description": "FirstName",
                    "type": "string"
                },
                "last_name": {
                    "description": "LastName",
                    "type": "string"
                },
                "mobile": {
                    "description": "Mobile phone number of account owner",
                    "type": "string"
                },
                "products": {
                    "description": "Products just not null for seller",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductEntity"
                    }
                },
                "roles": {
                    "description": "Roles contains account access level permissions",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "suspended": {
                    "description": "Suspended uses as determination flag for account suspension situation",
                    "type": "boolean"
                },
                "user_name": {
                    "description": "UserName",
                    "type": "string"
                }
            }
        },
        "vendora.BaseResult": {
            "type": "object",
            "properties": {
                "errors": {
                    "description": "Errors provides list off error that occurred in processing request",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "result": {
                    "description": "Result single/array of any type (object/number/string/boolean) that returns as response"
                },
                "result_count": {
                    "description": "ResultCount specified number of records that returned in result_count field expected result been array.",
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
