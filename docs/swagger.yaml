definitions:
  models.AuthInput:
    properties:
      password:
        type: string
      user_name:
        type: string
    type: object
  models.TokenBundlerOutput:
    properties:
      expire:
        description: Expire is time for expire token
        type: string
      refresh:
        description: Refresh is string that for refresh old token
        type: string
      token:
        description: Token is string that hashed by paseto
        type: string
    type: object
  models.UserEntity:
    properties:
      mobile:
        description: Mobile phone number of account owner
        type: string
      roles:
        description: Roles contains account access level permissions
        items:
          type: string
        type: array
      suspended:
        description: Suspended uses as determination flag for account suspension situation
        type: boolean
      user_name:
        description: UserName
        type: string
    type: object
  vendora.BaseResult:
    properties:
      errors:
        description: Errors provides list off error that occurred in processing request
        items:
          type: string
        type: array
      result:
        description: Result single/array of any type (object/number/string/boolean)
          that returns as response
      result_count:
        description: ResultCount specified number of records that returned in result_count
          field expected result been array.
        type: integer
    type: object
info:
  contact: {}
paths:
  /api/v1/user:
    get:
      consumes:
      - application/json
      description: get user information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/vendora.BaseResult'
            - properties:
                result:
                  $ref: '#/definitions/models.UserEntity'
              type: object
      summary: user info
      tags:
      - user
  /api/v1/user/login:
    post:
      consumes:
      - application/json
      description: log in with specific user name
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/vendora.BaseResult'
            - properties:
                result:
                  $ref: '#/definitions/models.TokenBundlerOutput'
              type: object
      summary: log in
      tags:
      - user
  /api/v1/user/register:
    post:
      consumes:
      - application/json
      description: Create New user
      parameters:
      - description: AuthInput
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.AuthInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/vendora.BaseResult'
            - properties:
                result:
                  $ref: '#/definitions/models.TokenBundlerOutput'
              type: object
      summary: Create New user
      tags:
      - user
  /mio/download/{token}:
    get:
      consumes:
      - application/octet-stream
      description: upload specified file to mio service with specified properties
      parameters:
      - description: access token of file
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: always returns status 200 but body contains errors
          schema:
            $ref: '#/definitions/vendora.BaseResult'
      security:
      - Authenticate Header: []
      summary: uploading file to mio service
      tags:
      - mio
  /mio/image/{size}/{token}:
    get:
      consumes:
      - application/octet-stream
      description: upload specified file to mio service with specified properties
      parameters:
      - description: width of requested image
        in: path
        name: size
        required: true
        type: integer
      - description: access token of file
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: always returns status 200 but body contains errors
          schema:
            $ref: '#/definitions/vendora.BaseResult'
      security:
      - Authenticate Header: []
      summary: uploading file to mio service
      tags:
      - mio
  /mio/upload/{tag}:
    post:
      consumes:
      - multipart/form-data
      description: uploading specified file to mio service with specified properties
      parameters:
      - description: uploading file
        in: formData
        name: file
        required: true
        type: file
      - description: string enums
        enum:
        - public
        - private
        - chat
        - profile
        in: path
        name: tag
        required: true
        type: string
      - description: 'authentication paseto token [Required If AuthMode: paseto]'
        in: header
        name: Authenticate
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: always returns status 200 but body contains errors
          schema:
            $ref: '#/definitions/vendora.BaseResult'
      security:
      - Authenticate Header: []
      - Session: []
      summary: uploading file to mio service
      tags:
      - mio
swagger: "2.0"
